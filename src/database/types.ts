/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from 'kysely'

export type Generated<T> =
  T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>

export type Numeric = ColumnType<string, number | string>

export type Timestamp = ColumnType<Date | string>

export interface Artists {
  createdAt: Generated<Timestamp>
  followers: number | null
  genres: string[] | null
  id: string
  name: string
  popularity: number | null
}

export interface TrackArtists {
  artistId: string
  trackId: string
}

export interface Tracks {
  acousticness: Numeric
  createdAt: Generated<Timestamp>
  danceability: string
  day: number
  durationMs: number
  energy: Numeric
  explicit: number
  id: string
  instrumentalness: Numeric
  key: number
  liveness: Numeric
  loudness: Numeric
  mode: number
  month: number
  name: string
  popularity: number
  speechiness: Numeric
  tempo: Numeric
  timeSignature: number
  valence: Numeric
  year: number
}

export interface DB {
  artists: Artists
  trackArtists: TrackArtists
  tracks: Tracks
}
